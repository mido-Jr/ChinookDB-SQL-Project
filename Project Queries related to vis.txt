Question 1: Who is writing the rock music?

SELECT DISTINCT ArtistId,
                A.Name,
                count(T.Name) AS Songs
FROM Artist AS A
INNER JOIN Album USING (ArtistId)
INNER JOIN Track AS T USING (AlbumId)
INNER JOIN Genre AS G USING (GenreId)
WHERE G.Name = 'Rock'
GROUP BY 1
ORDER BY 3 DESC
LIMIT 10

#########################################################################################################


Question 2
First, find which artist has earned the most according to the InvoiceLines?

SELECT Artist.Name,
       sum(InvoiceLine.Quantity*InvoiceLine.UnitPrice) AS AmountSpent,
       CustomerId,
       FirstName,
       LastName
FROM Invoice
INNER JOIN InvoiceLine USING (InvoiceId)
INNER JOIN Track USING (TrackId)
INNER JOIN Customer USING (CustomerId)
INNER JOIN Album USING (AlbumId)
INNER JOIN Artist USING (ArtistId)
WHERE Artist.Name = 'Iron Maiden'
GROUP BY 3
ORDER BY 2 DESC,
         FirstName,
         LastName

############################################################################################################


Question 3
query that determines the customer that has spent the most on music for each country

WITH test
     AS (SELECT Count(*)         AS Popularity,
                gen.NAME         AS GenreName,
                i.billingcountry AS Country
         FROM   invoiceline il
                JOIN track trk
                  ON trk.trackid = il.trackid
                JOIN genre gen
                  ON gen.genreid = trk.genreid
                JOIN invoice i
                  ON il.invoiceid = i.invoiceid
         GROUP  BY country,
                   gen.genreid)
SELECT ts.country,
       ts.genrename,
       ts.popularity
FROM   test ts
WHERE  ts.popularity = (SELECT Max(popularity)
                          FROM   test
                          WHERE  ts.country = country
                          GROUP  BY country)
ORDER  BY country 


############################################################################################################

Question 4
A query that shows the total number of tracks in each playlist

SELECT p.Name,
       COUNT(pt.TrackId) AS "Number Of Tracks"
FROM Playlist p
JOIN PlaylistTrack pt USING(PlaylistId)
GROUP BY p.name;

